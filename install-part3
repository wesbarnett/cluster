#!/bin/bash

set -e

password=XXXXX          # default password
users=USER1 USER2 USER3 # users to add
myuser=wes

NOIPUSER=
NOIPPASS=
NOIPDOMAIN=

##########################################

echo "Remind me just one more time: Which type of machine are you installing on?"
select TYPE in master node; do
	if [[ "$REPLY"  = 1 ]]; then
        MASTER=true
		break
	elif [[ "$REPLY"  = 2 ]]; then
		MASTER=false
		break
	fi
done

# Install some things we need
pacman -q -S --noconfirm vim openssh cmake git mlocate zsh screen xorg-server fftw xorg-xauth

# Update locate database
updatedb

# Enable wheel group to have sudo
echo "Enabling wheel group in sudoers..."
sed -i 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/g' /etc/sudoers

echo "Adding personal user..."
useradd -m -G wheel -s /bin/zsh $myuser
echo "Enter your user password..."
passwd wes

# Add users and configure them
echo "Adding other users..."

for user in $users; do
    echo "Adding $user..."
	useradd -m -G wheel -s /bin/bash $user
	mkdir /data/$user
	chown -R $user:$user /data/$user
	echo $user:$password | chpasswd
	chage -d 0 $user
done

#/bin/bash
echo "Setting up firewall and sshguard..."
pacman -q -S --noconfirm iptables sshguard

if [ "$MASTER" = true ]; then

echo "net.ipv4.ip_forward=1" >> /etc/systctl.d/99-sysctl.conf

echo "IPTABLES_FORWARD=1" >> /etc/conf.d/iptables

cat - > /etc/iptables/iptables.rules <<RULES
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -s 192.168.0.0/24 -o enp3s2 -j MASQUERADE
COMMIT
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -i eno1 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
-A FORWARD -p icmp -j ACCEPT
-A FORWARD -i lo -j ACCEPT
-A FORWARD -i eno1 -o enp3s2 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
-N sshguard
-A INPUT -p tcp --dport 22 -j sshguard
COMMIT
RULES

touch /etc/iptables/ip6tables.rules
systemctl start iptables.service
systemctl enable iptables.service
systemctl start sshguard.service
systemctl enable sshguard.service


echo "Setting up ssh..."
cat - > /etc/ssh/sshd_config <<SSHCONFIG
Protocol 2
LoginGraceTime 30s
PermitRootLogin no
AuthorizedKeysFile  .ssh/authorized_keys
ChallengeResponseAuthentication no
UsePAM yes
AllowTcpForwarding yes
X11Forwarding yes
X11DisplayOffset 10
X11UseLocalhost yes
PrintMotd no # pam does that
UsePrivilegeSeparation sandbox      # Default for new installations.
Banner /etc/issue.net
Subsystem   sftp    /usr/lib/ssh/sftp-server
SSHCONFIG

cat - > /etc/ssh/sshd_config <<SSHCONFIG
ForwardX11 yes
ForwardX11Trusted yes

Host *.loni.org
    ControlMaster auto
    ControlPath /tmp/%r@%h:%p
    ControlPersist 600
SSHCONFIG

else

cat - > /etc/ssh/sshd_config <<SSHCONFIG
AuthorizedKeysFile  .ssh/authorized_keys
ChallengeResponseAuthentication no
UsePAM yes
AllowTcpForwarding yes
X11Forwarding yes
X11DisplayOffset 10
X11UseLocalhost yes
UsePrivilegeSeparation sandbox      # Default for new installations.
Subsystem   sftp    /usr/lib/ssh/sftp-server
SSHCONFIG

fi

# Enable ssh
systemctl enable sshd

# Add domain name server caching on the master node
if [ "$MASTER" = true ]; then
echo "Setting up DNS cache server..."
pacman -S -q --no-confirm pdnsd
cat - > /etc/pdnsd.conf <<DNSCONFIG
global {
	perm_cache=1024;
	cache_dir="/var/cache/pdnsd";
	run_as="pdnsd";
	server_ip = 192.168.0.1;
	status_ctl = on;
	query_method=udp_tcp;
	min_ttl=15m;
	max_ttl=1w;
	timeout=10;
	neg_domain_pol=on;
	udpbufsize=1024;
}

server {
	label= "Google DNS";
	ip = 8.8.8.8, 8.8.4.4;
	timeout=4;
	uptest=if;
	interface=enp3s2;
	interval=10m;
	purge_cache=off;
	edns_query=yes;
}

source {
	owner=localhost;
	file="/etc/hosts";
}


rr {
	name=localhost;
	reverse=on;
	a=127.0.0.1;
	owner=localhost;
	soa=localhost,root.localhost,42,86400,900,86400,86400;
}
DNSCONFIG

rm /etc/resolv.conf
ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf

else

echo "Pointing to master node for DNS..."

rm /etc/resolv.conf
echo "nameserver 192.168.0.1 > /etc/resolv.conf"

fi

systemctl restart systemd-networkd
systemctl restart systemd-resolved

# Sync time
timedatectl set-ntp true 

# Update microcode
echo "Getting updated Intel microcode..."
pacman -S intel-ucode
grub-mkconfig -o /boot/grub/grub.cfg

# Add automatic timeout for virtual consoles (not terminal emulators)
cat -> /etc/profile.d/shell-timeout.sh <<TMOUTSETUP
TMOUT="\$(( 60*10 ))";
[ -z "\$DISPLAY" ] && export TMOUT;
case \$( /usr/bin/tty ) in
        /dev/tty[0-9]*) export TMOUT;;
esac
TMOUTSETUP

pacman -S --no-confirm -q ddclient

echo "Setting up ddclient..."
cat -> /etc/ddclient/ddclient.conf <<DDCLIENTCONF
daemon=300
syslog=yes
mail=root
mail-failure=root
pid=/var/run/ddclient.pid
ssl=yes
use=web, web=checkip.dyndns.org/, web-skip='IP Address'
protocol=dyndns2
server=dynupdate.no-ip.com
login=$NOIPUSER
password=$NOIPPASS
$NOIPDOMAIN
DDCLIENTCONF

systemctl start ddclient
systemctl enable ddclient

echo "Finished!. Probably should reboot one more time."
