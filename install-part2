#!/bin/bash

set -e

GITHUB=https://raw.githubusercontent.com/wesbarnett/cluster/master

INTERFACE=eno1		# internal
INTERFACE2=enp3s2	# external (on master)

echo "Remind me: Which type of machine are you installing on?"
select TYPE in master node; do
	if [[ "$REPLY"  = 1 ]]; then
		MYHOSTNAME=master
		MASTER=true
		NODE=1
		pacman -q -S --noconfirm wget
		wget $GITHUB/iptables.rules.gpg
		wget $GITHUB/users.txt.gpg
		break
	elif [[ "$REPLY"  = 2 ]]; then
		echo "Which node are you installing (give the number)?"
		read NODE
		MYHOSTNAME=node$NODE
		MASTER=false
		break
	fi
done

########################

# Set language
echo "Setting locale..."
sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf
export LANG=en_US.UTF-8

# Set time zone
echo "Setting time zone..."
hwclock --systohc --utc

# Set hostname
echo "Setting hostname..."
echo $MYHOSTNAME > /etc/hostname

# Enable networking
echo "Enabling internal network interface..."
systemctl enable systemd-networkd.service
systemctl enable systemd-resolved.service

ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf

if [ "$MASTER" = true ]; then
	echo "Enabling external network interface..."

cat - > /etc/systemd/network/external.network <<NETCONFIG
[Match]
Name=$INTERFACE2
[Network]
DHCP=ipv4
NETCONFIG

fi

cat - > /etc/systemd/network/wired.network <<NETCONFIG
[Match]
Name=$INTERFACE

[Address]
Address=192.168.0.$NODE

[Route]
Gateway=192.168.0.1
NETCONFIG

echo "Updating hosts..."
cat -> /etc/hosts <<HOSTS 
192.168.0.1	master
192.168.0.2	node2
192.168.0.3	node3
192.168.0.4	node4
192.168.0.5	node5
192.168.0.6	node6
192.168.0.7	node7
192.168.0.8	node8
192.168.0.9	node9
192.168.0.10	node10
192.168.0.11	node11
192.168.0.12	node12
HOSTS

# Create ramdisk environment
echo "Creating initial ramdisk..."
mkinitcpio -p linux

# Set root password
echo "Create root password..."
passwd

# Install a few needed things
echo "Installing bootloader..."
pacman -q -S --noconfirm grub
grub-install --target=i386-pc --recheck /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg

pacman -q -S --noconfirm nfs-utils wget

# Create pacman cache share

if [ "$MASTER" = true ]; then
	
	echo "Creating shared pacman cache..."
	mkdir -p /srv/nfs4/pacmancache
	mount --bind /var/cache/pacman/pkg /srv/nfs4/pacmancache

	echo "/var/cache/pacman/pkg /srv/nfs4/pacmancache  none   bind   0   0" >> /etc/fstab

	echo "/srv/nfs4/ 192.168.0.0/24(rw,fsid=root,no_subtree_check)" >> /etc/exports
	echo "/srv/nfs4/pacmancache 192.168.0.0/24(rw,no_subtree_check,nohide)" >> /etc/exports

	exportfs -rav

	systemctl enable rpcbind.service
	systemctl enable nfs-server.service

else

	echo "Creating home directory export..."
	mkdir -p /srv/nfs4/home

	mount --bind /home /srv/nfs4/home
	echo "/home /srv/nfs4/home  none   bind   0   0" >> /etc/fstab

	echo "/srv/nfs4/ 192.168.0.0/24(rw,fsid=root,no_subtree_check)" >> /etc/exports
	echo "/srv/nfs4/home 192.168.0.0/24(rw,no_subtree_check,nohide)" >> /etc/exports

	exportfs -rav

	systemctl enable rpcbind.service
	systemctl enable nfs-server.service

	echo "Going to mount master's pacman cache..."
	read -p "Plug ethernet cable into master node. Then press any key to continue... " -n1 -s

	# Setup pacman cache share mount
	mkdir -p /mnt/pacmancache
	echo "master:/srv/nfs4/networkcache /var/cache/pacman/pkg nfs noauto,noatime,rsize=32768,wsize=32768 0 0" >> /etc/fstab
fi

GITHUB=https://raw.githubusercontent.com/wesbarnett/cluster/master
PART3=install-part3
wget $GITHUB/$PART3
chmod +x install-part3
echo "Restart and run part3."

exit
