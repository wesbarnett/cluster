From 893603205b9d050b8abf1161be11f9aee4305f7b Mon Sep 17 00:00:00 2001
From: "Daniel R. Roe" <Daniel.R.Roe@gmail.com>
Date: Wed, 18 May 2016 09:07:08 -0600
Subject: [PATCH] =?UTF-8?q?DRR=20-=20Cpptraj:=20Switch=20to=20checking=20t?=
 =?UTF-8?q?he=20error/fail=20bits=20of=20stringstreams=20instead=20of=20im?=
 =?UTF-8?q?plicitly=20converting=20the=20conversion=20itself=20to=20bool.?=
 =?UTF-8?q?=20Although=20the=20latter=20has=20worked=20fine=20for=20years,?=
 =?UTF-8?q?=20bleeding-edge=20compilers=20will=20choke=20on=20it.=20Fixes?=
 =?UTF-8?q?=20errors=20of=20the=20type:=20```=20StringRoutines.cpp:=20In?=
 =?UTF-8?q?=20function=20=E2=80=98bool=20validDouble(const=20string&)?=
 =?UTF-8?q?=E2=80=99:=20StringRoutines.cpp:183:21:=20error:=20cannot=20con?=
 =?UTF-8?q?vert=20=E2=80=98std::basic=5Fistream<char>::=5F=5Fistream=5Ftyp?=
 =?UTF-8?q?e=20{aka=20std::basic=5Fistream<char>}=E2=80=99=20to=20?=
 =?UTF-8?q?=E2=80=98bool=E2=80=99=20in=20return=20=20=20=20return=20(iss?=
 =?UTF-8?q?=20>>=20val);=20```?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 src/RPNcalc.cpp        | 12 ++++++++----
 src/StringRoutines.cpp |  9 ++++++---
 2 files changed, 14 insertions(+), 7 deletions(-)

diff --git a/src/RPNcalc.cpp b/src/RPNcalc.cpp
index 91f9c77..245e672 100644
--- a/src/RPNcalc.cpp
+++ b/src/RPNcalc.cpp
@@ -91,7 +91,8 @@ int RPNcalc::ProcessExpression(std::string const& expression) {
       if (debug_ > 0) mprintf("Number detected: %s\n", number.c_str());
       std::istringstream iss(number);
       double val;
-      if (!(iss >> val)) {
+      iss >> val;
+      if (iss.fail()) {
         mprinterr("Error: Invalid number: %s\n", number.c_str());
         return 1;
       }
@@ -104,7 +105,8 @@ int RPNcalc::ProcessExpression(std::string const& expression) {
         if (debug_ > 0) mprintf("Exponent detected: %s\n", exponent.c_str());
         double eval;
         std::istringstream iss2(exponent);
-        if (!(iss2 >> eval)) {
+        iss2 >> eval;
+        if (iss2.fail()) {
           mprinterr("Error: Invalid exponent: %s\n", exponent.c_str());
           return 1;
         }
@@ -868,7 +870,8 @@ int RPNcalc::Nparams() const {
       {
         std::istringstream iss( T->Name().substr(1) );      
         int pnum;
-        if (!(iss >> pnum)) {
+        iss >> pnum;
+        if (iss.fail()) {
           mprinterr("Error: Invalid parameter number: %s\n", T->Name().substr(1).c_str());
           return 1;
         }
@@ -917,7 +920,8 @@ int RPNcalc::Evaluate(Darray const& Params, double X, double& Result) const {
           // Find parameter An, where n is parameter position.
           std::istringstream iss( T->Name().substr(1) );
           int nparam;
-          if (!(iss >> nparam)) {
+          iss >> nparam;
+          if (iss.fail()) {
             mprinterr("Error: Invalid parameter number: %s\n", T->Name().substr(1).c_str());
             return 1;
           }
diff --git a/src/StringRoutines.cpp b/src/StringRoutines.cpp
index 500f5ff..08031fe 100644
--- a/src/StringRoutines.cpp
+++ b/src/StringRoutines.cpp
@@ -107,7 +107,8 @@ public:
 int convertToInteger(std::string const &s) {
   std::istringstream iss(s);
   long int i;
-  if (!(iss >> i))
+  iss >> i;
+  if (iss.fail())
     throw BadConversion("convertToInteger(\"" + s + "\")");
   return (int)i;
 }
@@ -117,7 +118,8 @@ int convertToInteger(std::string const &s) {
 double convertToDouble(std::string const &s) {
   std::istringstream iss(s);
   double d;
-  if (!(iss >> d))
+  iss >> d;
+  if (iss.fail())
     throw BadConversion("convertToDouble(\"" + s + "\")");
   return d;
 }
@@ -180,7 +182,8 @@ bool validDouble(std::string const& argument) {
   if (argument.empty()) return false;
   std::istringstream iss(argument);
   double val;
-  return (iss >> val);
+  iss >> val;
+  return !(iss.fail());
 }
 
 // -----------------------------------------------------------------------------
-- 
2.8.2

