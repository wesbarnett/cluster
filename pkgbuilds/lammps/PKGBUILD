# Maintainer: James Barnett
pkgname=lammps  
pkgver=r14624
pkgrel=1 
pkgdesc="Large-scale Atomic/Molecular Massively Parallel Simulator."
url="http://lammps.sandia.gov/"
arch=('i686' 'x86_64')
license=('GPL')
depends=('fftw-bettersimd' 'openmpi')
makedepends=()
source=(git://git.lammps.org/lammps-ro.git)
md5sums=('SKIP')
build() {
  cd $srcdir/lammps-ro/src
  git checkout $pkgver
  # See Section 2.2 of the manual about these options
  # This compiles it with png, ffmeg support. Also points to already
  # installed fftw library instead of making its own and uses single precision
  # for FFTW. Additionally this is compiled for an Intel Haswell i7 with AVX2
  # instructions and OpenMP.
  sed -i -e '0,/LMP_INC/{s/LMP_INC.*/LMP_INC =	-DLAMMPS_GZIP -DLAMMPS_PNG -DLAMMPS_FFMPEG/}' \
        -e '0,/CCFLAGS/{s/CCFLAGS.*/CCFLAGS =	-g -O3 -march=core-avx2 -fopenmp -DLAMMPS_MEMALIGN=64/}' \
        -e '0,/LINKFLAGS/{s/LINKFLAGS.*/LINKFLAGS =	-g -O -fopenmp/}' \
        -e '0,/FFT_INC/{s/FFT_INC.*/FFT_INC = -DFFT_FFTW3 -DFFT_SINGLE -DFFTW_SIZE/}' \
        -e '0,/FFT_PATH/{s/FFT_PATH.*/FFT_PATH = -L\/usr\/lib/}' \
        -e '0,/FFT_LIB/{s/FFT_LIB.*/FFT_LIB = -lfftw3f/}' \
        -e '0,/JPG_INC/{s/JPG_INC.*/JPG_INC =   -I\/usr\/include/}' \
        -e '0,/JPG_PATH/{s/JPG_PATH.*/JPG_PATH =  -L\/usr\/lib/}' \
        -e '0,/JPG_LIB/{s/JPG_LIB.*/JPG_LIB =   -lpng/}' MAKE/Makefile.mpi
  # Modify what packages you want here
  make yes-kspace
  make yes-molecule
  make yes-rigid
  make yes-xtc
  make yes-user-fep
  make yes-user-intel
  make yes-user-omp
}

package() {
  install -d $pkgdir/usr/share/lammps
  install -d  $pkgdir/usr/share/doc/lammps
  cd $srcdir/lammps-ro
  install -Dm 755 src/lmp_mpi $pkgdir/usr/bin/lmp_mpi
  cp bench examples $pkgdir/usr/share/lammps -r
  cp doc/* $pkgdir/usr/share/doc/lammps -r
}
